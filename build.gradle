plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id "com.diffplug.spotless" version "6.11.0"
    id "io.freefair.lombok" version "6.6.2"

    id 'java'
    id 'maven-publish'
    id 'idea'
}

group = 'pipelite'
version = '2.8.3'
sourceCompatibility = '1.11'

java.withSourcesJar()

bootJar {
    enabled = false
    manifest {
        attributes 'Start-Class': 'pipelite.Pipelite'
    }
}

jar {
    enabled = true
    archiveClassifier = '' //use empty string. removes the word 'plain' from file name.
}

sourcesJar.enabled = false

spotless {
    java {
        licenseHeader('''/*
 * Copyright 2020-2022 EMBL - European Bioinformatics Institute
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
 * file except in compliance with the License. You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the
 * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */
''')
        importOrder 'java', 'javax', 'org', 'com', '', 'uk'
        removeUnusedImports()
        googleJavaFormat()
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.retry:spring-retry:1.2.5.RELEASE'
    implementation 'org.springdoc:springdoc-openapi-ui:1.3.0'
    implementation 'com.google.guava:guava:29.0-jre'
    implementation 'com.google.flogger:flogger:0.5.1'
    implementation 'com.google.flogger:flogger-slf4j-backend:0.5.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.2'
    implementation 'org.apache.commons:commons-exec:1.3'
    implementation 'org.apache.commons:commons-text:1.9'
    implementation 'org.hsqldb:hsqldb:2.5.1'
    implementation 'org.jgrapht:jgrapht-core:1.5.1'
    implementation 'tech.tablesaw:tablesaw-core:0.38.1'
    implementation 'tech.tablesaw:tablesaw-jsplot:0.38.1'
    implementation 'com.cronutils:cron-utils:9.1.1'
    implementation 'io.fabric8:kubernetes-client:5.11.2'
    implementation 'com.amazonaws:aws-java-sdk-batch:1.11.929'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'org.assertj:assertj-core:3.16.1'
    testImplementation 'org.mockito:mockito-core:3.5.0'
    testImplementation 'org.postgresql:postgresql:42.5.0'
    // https://www.oracle.com/database/technologies/maven-central-guide.html
    testImplementation 'com.oracle.database.jdbc:ojdbc8:19.8.0.0'

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            // Project specific maven repository in Gitlab.
            url "https://gitlab.ebi.ac.uk/api/v4/projects/2756/packages/maven"
            // Developer token in Gitlab.
            credentials(HttpHeaderCredentials) {
                name = "Private-Token"
                value = project.ext.properties.gitlab_private_token
            }
            authentication {
                header(HttpHeaderAuthentication)
            }
        }
    }
}

test {
    useJUnitPlatform()
    outputs.upToDateWhen { false }
}
